#pragma checksum "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "651c72dbf627ae1ef50ad58f7c9a958844c495ff"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TotemsAPI.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace TotemsAPI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\C# Resources\Projects\TotemsAPI\Pages\_ViewImports.cshtml"
using TotemsAPI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"651c72dbf627ae1ef50ad58f7c9a958844c495ff", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"031bb17aa7a1f6cdbd6d4b3e0ca57f4c21c774bb", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""container bg-light"">
        <div class=""row text-center pad bg-primary"">
            <div class=""col-lg-12"">
                <h3 class=""pad-top text-capitalize"">API for totems.</h3>
            </div>
        </div>
        <div class=""row pad "">
            <div class=""col-lg-12"">
                <h4>Significance of Totems in Zimabwe</h4>

                <p class=""text-justify"">As Zimbabweans we have lost our culture, we do not have tangible things that we can 
                pass to the next generation which can also remind us of how people lived long back. 
                As part of our culture different tribes were identified by totems. 
                These were used to create a civilized community with strong relationships. 
                Totems are based on animal names or organs from other animals. 
                Some say totems were created to preserve wild life which is particularly true in the sense 
                that it is a taboo to eat an animal that");
            WriteLiteral(@" symbolizes your totem.</p>
                <p class=""text-justify"">In Zimbabwe we have two major tribes (Shona and Ndebele) both of which used totems to 
                praise each other when they did good.
                Although there are quite a few animals that are used as totems, there are more than one version of each 
                totem which aroused from different origins. 
                For example, we have Soko named after a monkey with variants being Murehwa, Makwiramiti, Bvudzijena etc.</p>
            </div>
        </div>
        <div class=""row pad"">
            <div class=""col-lg-12"">
                <h4 id=""list1"">List of well known totems</h4>
                <p>
                    This list contains the Totems we have added in the API.
                    Here we have only mention the animal names and the variant of the totem
                </p>
                <div class=""row pad"">
                    <div class=""col-sm-2"">

                    </div>
         ");
            WriteLiteral("           <div class=\"text-lg-center col-sm-6\">\r\n                        <ul class=\"list-group myUl\">\r\n");
#nullable restore
#line 44 "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml"
                             foreach (var totem in Model.Totems)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <li class=\"list-group-item l-item pad list-group-item-light text-capitalize text-xl-center\">  <strong>");
#nullable restore
#line 46 "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml"
                                                                                                                                 Write(totem.Animal);

#line default
#line hidden
#nullable disable
            WriteLiteral(" &nbsp;&nbsp; &nbsp;");
#nullable restore
#line 46 "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml"
                                                                                                                                                                  Write(totem.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("</strong></li>\r\n");
#nullable restore
#line 47 "D:\C# Resources\Projects\TotemsAPI\Pages\Index.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </ul>
                    </div>
                    <div class=""col-sm-3"">

                    </div>
                </div>


                <h5 class=""pad-top"">Usage of the API</h5>
                <hr />
                <p>The API returns data in JSON format. The examples below show how to retrieve data using different criterion.</p>
                <ul>
                    <li style=""list-style-type:square;""><span><i>hostname/totems</i> - default list of totems</span></li>
                    <li style=""list-style-type:square;""><span><i>hostname/totems/totem/{string}</i> - retrieves a specific totem with a matching id or origin</span></li>
                    <li style=""list-style-type:square;""><span><i>hostname/totems/all/{name}</i> - retrieves all totems with a matching totem name</span></li>
                </ul>


            </div>
        </div>
    </div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
